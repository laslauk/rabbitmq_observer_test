

version: "3"

services:

  # Message Broker RabbitMQ
  rapid-runner-rabbit:
    image: rabbitmq:3-management
    expose:
      - "5672"
    networks:
      - lassenet

  # Original Message my.o sender
  orig:
    depends_on:
      -  rapid-runner-rabbit
      -  obse
      -  imed
    command: ["./utils/wait-for-it.sh", "-t", "30", "rapid-runner-rabbit:5672", "--","node", "main.js"]
    build:
      dockerfile: Dockerfile
      context: ./ORIG
    networks:
      - lassenet

  # Observer that writes to the volume
  obse:
    depends_on:
      -  rapid-runner-rabbit
    command: ["/usr/src/app/utils/wait-for-it.sh", "-t", "30", "rapid-runner-rabbit:5672", "--","node", "obse.js"]
    build:
      dockerfile: Dockerfile
      context:  ./OBSE
    networks:
      - lassenet
    volumes:
      - datavolume:/usr/src/app/

  # HTTP server that retusn the conent in shared volume /usr/src/app/messages.txt
  httpserv:
    depends_on:
      -  rapid-runner-rabbit
    command: ["/usr/src/app/utils/wait-for-it.sh", "-t", "30", "rapid-runner-rabbit:5672", "--","node", "index.js"]
    build:
      dockerfile: Dockerfile
      context:  ./HTTPSERV
    ports:
      - "8080:8894"

    networks:
      - lassenet

    volumes:
      - datavolume:/usr/src/app/

  # IMED Listens to the channel and observers the my.o and sends its own my.i
  imed:
    depends_on:
      -  rapid-runner-rabbit
    command: ["./utils/wait-for-it.sh", "-t", "30", "rapid-runner-rabbit:5672", "--","node", "index.js"]
    build:
      dockerfile: Dockerfile
      context:  ./IMED
    networks:
      - lassenet

networks:
  lassenet:
    
volumes:
  datavolume:
